#ifndef MAZIOT_BSP_KEY_MAZ_KEY_H_
#define MAZIOT_BSP_KEY_MAZ_KEY_H_

typedef enum _MAZBSP_KEY_
{
    MAZBSP_KEY1 = 0,
    MAZBSP_KEY2,
    MAZBSP_KEY_MAX,
} MAZBSP_KEY;

typedef enum _MAZBSP_KEY_GPIOPORT_
{
    MAZBSP_KEY_GPIOPORT_P1 = GPIO_PORT_P1,
    MAZBSP_KEY_GPIOPORT_P2 = GPIO_PORT_P2,
    MAZBSP_KEY_GPIOPORT_P3 = GPIO_PORT_P3,
    MAZBSP_KEY_GPIOPORT_P4 = GPIO_PORT_P4,
    MAZBSP_KEY_GPIOPORT_P5 = GPIO_PORT_P5,
    MAZBSP_KEY_GPIOPORT_P6 = GPIO_PORT_P6,
    MAZBSP_KEY_GPIOPORT_P7 = GPIO_PORT_P7,
    MAZBSP_KEY_GPIOPORT_P8 = GPIO_PORT_P8,
    MAZBSP_KEY_GPIOPORT_P9 = GPIO_PORT_P9,
    MAZBSP_KEY_GPIOPORT_P10 = GPIO_PORT_P10,
    MAZBSP_KEY_GPIOPORT_P11 = GPIO_PORT_P11,
    MAZBSP_KEY_GPIOPORT_PA = GPIO_PORT_PA,
    MAZBSP_KEY_GPIOPORT_PB = GPIO_PORT_PB,
    MAZBSP_KEY_GPIOPORT_PC = GPIO_PORT_PC,
    MAZBSP_KEY_GPIOPORT_PD = GPIO_PORT_PD,
    MAZBSP_KEY_GPIOPORT_PE = GPIO_PORT_PE,
    MAZBSP_KEY_GPIOPORT_PF = GPIO_PORT_PF,
    MAZBSP_KEY_GPIOPORT_PJ = GPIO_PORT_PJ,
} MAZBSP_KEY_GPIOPORT;

typedef enum _MAZBSP_KEY_GPIOPIN_
{
    MAZBSP_KEY_GPIOPIN0 = GPIO_PIN0,
    MAZBSP_KEY_GPIOPIN1 = GPIO_PIN1,
    MAZBSP_KEY_GPIOPIN2 = GPIO_PIN2,
    MAZBSP_KEY_GPIOPIN3 = GPIO_PIN3,
    MAZBSP_KEY_GPIOPIN4 = GPIO_PIN4,
    MAZBSP_KEY_GPIOPIN5 = GPIO_PIN5,
    MAZBSP_KEY_GPIOPIN6 = GPIO_PIN6,
    MAZBSP_KEY_GPIOPIN7 = GPIO_PIN7,
    MAZBSP_KEY_GPIOPIN8 = GPIO_PIN8,
    MAZBSP_KEY_GPIOPIN9 = GPIO_PIN9,
    MAZBSP_KEY_GPIOPIN10 = GPIO_PIN10,
    MAZBSP_KEY_GPIOPIN11 = GPIO_PIN11,
    MAZBSP_KEY_GPIOPIN12 = GPIO_PIN12,
    MAZBSP_KEY_GPIOPIN13 = GPIO_PIN13,
    MAZBSP_KEY_GPIOPIN14 = GPIO_PIN14,
    MAZBSP_KEY_GPIOPIN15 = GPIO_PIN15,
    MAZBSP_KEY_GPIOPIN_ALL8 = GPIO_PIN_ALL8,
    MAZBSP_KEY_GPIOPIN_ALL16 = GPIO_PIN_ALL16,
} MAZBSP_KEY_GPIOPIN;

typedef enum _MAZBSP_KEY_GPIOLEVEL_
{
    MAZBSP_KEY_GPIOLEVEL_HIGH = GPIO_INPUT_PIN_HIGH,
    MAZBSP_KEY_GPIOLEVEL_LOW = GPIO_INPUT_PIN_LOW,
} MAZBSP_KEY_GPIOLEVEL;

typedef enum _MAZBSP_KEY_MODE_
{
    MAZBSP_KEY_MODE_INTERRUPT = 0,
    MAZBSP_KEY_MODE_GPIOINPUT,
    MAZBSP_KEY_MODE_MAX,
} MAZBSP_KEY_MODE;

typedef struct _MAZBSP_KEY_CTRL_
{
    MAZBSP_KEY_GPIOPORT port;               // 连接KEY的GPIOPORT
    MAZBSP_KEY_GPIOPIN pin;                 // 连接KEY的GPIOPIN
    MAZBSP_KEY_GPIOLEVEL press;             // 按下后GPIO是高电平还是低电平
    MAZBSP_KEY_MODE mode;                   // 按键检测方式，中断方式还是扫描方式
} MAZBSP_KEY_CTRL;

int16_t maz_key_init(void);

#endif /* MAZIOT_BSP_KEY_MAZ_KEY_H_ */
